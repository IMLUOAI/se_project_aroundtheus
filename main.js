!function(){"use strict";class e{constructor(e,t,s){let{name:r,link:i,_id:n,isLiked:o,likeCount:a}=e,{handleImageClick:l,handleCardDelete:d,handleCardLike:u}=s;this._name=r,this._link=i,this._id=n,this.isLiked=o,this._cardSelector=t,this._handleImageClick=l,this._handleCardDelete=d,this._handleCardLike=u,this._cardElement=this._getTemplate()}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleCardLike(this)})),this._deleteButton.addEventListener("click",(()=>{this._handleCardDelete(this)})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}updateLikeStatus(e){this.isLiked=e,this._renderLikes()}_renderLikes(){this.isLiked?this._likeButton.classList.add("card__heart-button_active"):this._likeButton.classList.remove("card__heart-button_active")}removeCard(){this._cardElement.remove(),this._cardElement=null}getView(){return this._likeButton=this._cardElement.querySelector(".card__heart-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__title"),this._setEventListeners(),this._renderLikes(),this._cardImage.src=this._link,this._cardTitle.textContent=this._name,this._cardImage.alt=`photo of ${this._name}`,this._cardElement}getId(){return this._id}}class t{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._submitButton=this._formElement.querySelector(this._submitButtonSelector)}_setEventListeners=()=>{this.toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))};_showInputError=e=>{const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)};_hideInputError=e=>{const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""};_checkInputValidity=e=>{if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)};_hasInvalidInput=()=>!this._inputList.every((e=>e.validity.valid));toggleButtonState(){this._hasInvalidInput()?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}enableValidation=()=>{this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e){this._popupElement=document.querySelector(e),this._closeButton=this._popupElement.querySelector(".modal__close-button"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal__opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal__opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{e.target.classList.contains("modal__opened")&&this.close()})),this._closeButton.addEventListener("click",(()=>{this.close()}))}}class r extends s{constructor(e,t){super(e),this._handleFormSubmit=t,this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputElements=this._popupElement.querySelectorAll(".modal__input"),this._submitButton=this._popupElement.querySelector(".modal__submit-button"),this._submitButtonText=this._submitButton.textContent}_getInputValues(){const e=Array.from(this._popupForm.querySelectorAll(".modal__input"));return this._inputValues={},e.forEach((e=>{this._inputValues[e.name]=e.value})),this._inputValues}close(){super.close(),this._popupForm.reset()}setLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._submitButtonText}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}class i{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._containerSelector=document.querySelector(t)}renderItems(){this._items.forEach(this._renderer)}addItem(e){this._containerSelector.prepend(e)}}const n={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},o=(document.querySelector(".gallery__cards"),document.querySelector("#card-template").content.firstElementChild,document.querySelector("#edit-modal"),document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector(".profile__edit-button")),a=document.querySelector(".profile__avatar-edit-button"),l=document.forms["profile-form"],d=l.querySelector("#profile-name-input"),u=l.querySelector("#profile-description-input"),c=(document.querySelector("#add-card-modal"),document.querySelector(".profile__plus-button")),h=document.forms["card-form"],_=(h.querySelector("#card-title-input"),h.querySelector("#card-url-input"),document.querySelector("#preview-image-modal")),m=(_.querySelector(".modal__preview-image"),_.querySelector(".modal__preview-text"),new class{constructor(e,t,s){this._titleElement=document.querySelector(e),this._descriptionElement=document.querySelector(t),this._avatarElement=document.querySelector(s)}getUserInfo(){return{name:this._titleElement.textContent,description:this._descriptionElement.textContent}}setUserInfo(e){this._titleElement.textContent=e.name,this._descriptionElement.textContent=e.about}setAvatar(e){this._avatarElement.src=e}}(".profile__title",".profile__description",".profile__avatar")),p=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_getRes(e){return e.ok?e.json():Promise.reject(`Error:${e.status}`)}updateAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then(this._getRes)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then(this._getRes)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._getRes)}profileUpdate(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.description})}).then(this._getRes)}addCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(this._getRes)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._getRes)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._getRes)}disLikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._getRes)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"c2e4b34f-c221-48a4-b144-59557b6d0818","Content-Type":"application/json"}});let v;function E(t){const s=function(t){return new e(t,"#card-template",{handleImageClick:()=>C.open(t.name,t.link),handleCardDelete:w,handleCardLike:x}).getView()}(t);v.addItem(s)}Promise.all([p.getUserInfo(),p.getInitialCards()]).then((e=>{let[t,s]=e;m.setUserInfo({name:t.name,about:t.about}),m.setAvatar(t.avatar),v=new i({items:s,renderer:E},".gallery__cards"),v.renderItems()})).catch((e=>{console.error(e)}));const S=document.forms["avatar-form"],f=document.forms["profile-form"],g=document.forms["card-form"],b=new t(n,S),L=new t(n,f),y=new t(n,g);b.enableValidation(),y.enableValidation(),L.enableValidation();const C=new class extends s{constructor(e){super(e),this._popupImage=this._popupElement.querySelector(".modal__preview-image"),this._popupCaption=this._popupElement.querySelector(".modal__preview-text")}open(e,t){this._popupImage.src=t,this._popupImage.alt=e,this._popupCaption.textContent=e,super.open()}}("#preview-image-modal"),k=new r("#change-profile-avatar-modal",(function(e){k.setLoading(!0,"saving..."),p.updateAvatar(e).then((e=>{m.setAvatar(e.avatar),k.close()})).catch((e=>{console.error(e)})).finally((()=>k.setLoading(!1,"Save")))})),q=new r("#edit-modal",(function(e){q.setLoading(!0,"Saving..."),p.profileUpdate(e).then((e=>{m.setUserInfo({name:e.name,about:e.about}),q.close()})).catch((e=>{console.error(e)})).finally((()=>q.setLoading(!1,"Save")))})),I=new r("#add-card-modal",(function(e){I.setLoading(!0,"Saving..."),p.addCard(e).then((e=>{E(e),I.close()})).catch((e=>{console.error(e)})).finally((()=>I.setLoading(!1,"Create")))})),B=new class extends s{constructor(e){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupForm.querySelector(".modal__submit-button"),this._submitButtonText=this._submitButton.textContent}setSubmitAction(e){this._handleFormSubmit=e}setLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._submitButtonText}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()})),super.setEventListeners()}}("#delete-card-modal");function w(e){B.open(),B.setSubmitAction((()=>{B.setLoading(!0,"Deleting..."),p.deleteCard(e._id).then((()=>{B.close(),e.removeCard()})).catch((e=>{console.error(e)})).finally((()=>{B.setLoading(!1,"Yes")}))}))}function x(e){e.isLiked?p.disLikeCard(e.getId()).then((t=>{e.updateLikeStatus(t.isLiked)})).catch((e=>{console.error(e)})):p.likeCard(e.getId()).then((t=>{e.updateLikeStatus(t.isLiked)})).catch((e=>{console.error(e)}))}o.addEventListener("click",(()=>{const e=m.getUserInfo();d.value=e.name,u.value=e.description,L.toggleButtonState(),q.open()})),c.addEventListener("click",(()=>{y.toggleButtonState(),I.open()})),a.addEventListener("click",(()=>{b.toggleButtonState(),k.open()})),C.setEventListeners(),k.setEventListeners(),q.setEventListeners(),I.setEventListeners(),B.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,